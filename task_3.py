"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
"""
"""
my_list = input('Введите число, которое требуется перевернуть:\n>>')

result = []
for i in reversed(my_list):
    result.append(i)
print("".join(result))
"""

def revers_number(numb):
    # divmod разбивает число отделя последний знак
    # ниже аналог
    # numeral = numb % 10
    # rest_numb = numb // 10
    rest_numb, numeral = divmod(numb, 10)
    # точка выхода
    if rest_numb == 0:

        return str(numeral)
    else:
    # возвращает последний знак и поочередно последние цифры из оставшегося числа
        return str(numeral) + revers_number(rest_numb)

numb = int(input('Введите число, которое требуется перевернуть:\n>>'))

print(f'Перевернутое число: {str(revers_number(numb))}')


